/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export default function SciFiDoor({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/assets/models/scifidoor.gltf') as GLTFResult
  materials.Material.color = { r: 0.5, g: 0.5, b: 0.5 } as any;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials.Material} position={[-0.35, 1, 0]} scale={[0.7, 1, 0.1]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials.Material} position={[0.36, 1, 0]} rotation={[0, 0, Math.PI]} scale={[0.7, 1, 0.1]} />
      <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} position={[0, 1, 0]} scale={[0.85, 1, 0.2]} />
    </group>
  )
}

useGLTF.preload('/assets/models/scifidoor.gltf')
